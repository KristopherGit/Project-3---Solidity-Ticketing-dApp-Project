{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red255\green255\blue255;\red224\green129\blue13;
\red213\green20\blue102;\red20\green153\blue108;\red255\green255\blue255;\red255\green255\blue255;\red255\green255\blue255;
\red222\green127\blue12;\red39\green131\blue202;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c100000\c100000\c99971;\cssrgb\c90865\c57785\c3831;
\cssrgb\c87518\c18826\c47306;\cssrgb\c744\c65268\c49801;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c100000\c100000\c99941;\cssrgb\c100000\c100000\c99941;
\cssrgb\c90353\c57133\c2953;\cssrgb\c18486\c58982\c83250;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs20 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 def \cb2 \strokec4 create_balcony_view\cb2 \strokec3 ():\
    gallery = \{\}\
    for x in \cb2 \strokec4 range\cb2 \strokec3 (\cb2 \strokec5 57\cb2 \strokec3 ):\
        for y in \cb2 \strokec4 range\cb2 \strokec3 (\cb2 \strokec5 28\cb2 \strokec3 ):\
            seat = \{\
                'aisle': x,\
                \cb2 \strokec6 'row'\cb2 \strokec3 : y,\
                \cb2 \strokec6 'name'\cb2 \strokec3 : f\cb2 \strokec6 '\{x\},\{y\}'\cb2 \strokec3 ,\
                \cb2 \strokec6 'price'\cb2 \strokec3 : \cb2 \strokec5 71000000000000000\cb2 \strokec3 ,\
                \cb2 \strokec6 'color'\cb2 \strokec3 : \cb2 \strokec6 '#1E90FF'\cb2 \strokec3 \
            \}\
            gallery\cb2 \strokec5 [seat[\cb2 \strokec6 'name'\cb2 \strokec5 ]\cb2 \strokec3 ] = seat\
\
    traces = \cb2 \strokec5 []\cb2 \strokec3 \
    for seat_number, seat in gallery\cb2 \strokec5 .items\cb2 \strokec3 ():\
        color = \cb2 \strokec6 '#1E90FF'\cb2 \strokec3 \
        trace = go.\cb2 \strokec4 Scatter\cb2 \strokec3 (\
            x=[seat[\cb2 \strokec6 'aisle'\cb2 \strokec3 ]],\
            y=[seat[\cb2 \strokec6 'row'\cb2 \strokec3 ]],\
            mode=\cb2 \strokec6 'markers'\cb2 \strokec3 ,\
            marker=\cb2 \strokec4 dict\cb2 \strokec3 (size=\cb2 \strokec5 6\cb2 \strokec3 , color=color),\
            textfont=\cb2 \strokec4 dict\cb2 \strokec3 (\
                size=\cb2 \strokec5 20\cb2 \strokec3 \
            )\
        )\
        traces.\cb2 \strokec4 append\cb2 \strokec3 (trace)\
    return traces\
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb7 \outl0\strokewidth0 ########################\cb2 \outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\partightenfactor0
\cf0 \
view_options = \cb2 \strokec5 [\cb2 \strokec6 'Balcony'\cb2 \strokec5 , \cb2 \strokec6 'Main Floor'\cb2 \strokec5 , \cb2 \strokec6 'Mezzanine'\cb2 \strokec5 ]\cb2 \strokec3 \
selected_view = st\cb2 \strokec5 .sidebar.selectbox\cb2 \strokec3 ('Select a View', view_options)\
\
if selected_view == 'Balcony':\
    traces = \cb2 \strokec4 create_balcony_view\cb2 \strokec3 ()\
elif selected_view == \cb2 \strokec6 'Main Floor'\cb2 \strokec3 :\
    traces = \cb2 \strokec4 create_main_floor_view\cb2 \strokec3 ()\
else:\
    traces = \cb2 \strokec4 create_mezzanine_view\cb2 \strokec3 ()\
\cb2 \strokec9 \
st.\cb2 \strokec10 write\cb2 \strokec9 (traces)\
\
########################\
\
\
\cb2 \strokec3 selected_view = st.sidebar.selectbox(\cb2 \strokec6 'Select a View'\cb2 \strokec3 , view_options, key=\cb2 \strokec6 'selected_view'\cb2 \strokec3 )\
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \strokec11 if\cb2 \strokec3  selected_view == \cb2 \strokec6 'Balcony'\cb2 \strokec3 :\
    traces = create_balcony_view()\
\cb2 \strokec11 elif\cb2 \strokec3  selected_view == \cb2 \strokec6 'Main Floor'\cb2 \strokec3 :\
    traces = create_main_floor_view()\
\cb2 \strokec11 else\cb2 \strokec3 :\
    traces = create_mezzanine_view()\
\
st.write(traces, session=\cb2 \strokec11 True\cb2 \strokec3 )}